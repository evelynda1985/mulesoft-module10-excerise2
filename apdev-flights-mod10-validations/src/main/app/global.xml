<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<context:property-placeholder location="flights-${env}.properties" />
	<http:listener-config name="HTTP_Listener_Configuration"
		host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" />
	<http:request-config name="United_HTTP_Request_Configuration"
		host="${united.host}" port="80" doc:name="HTTP Request Configuration" />
	<http:request-config name="American_HTTP_Request_Configuration"
		host="training-american-ws.cloudhub.io" port="80" basePath="/api/"
		doc:name="HTTP Request Configuration">
		<http:raml-api-configuration
			location="https://anypoint.mulesoft.com/exchange/api/v1/organizations/68ef9520-24e9-4cf2-b2f5-620025690913/assets/68ef9520-24e9-4cf2-b2f5-620025690913/training-american-flights-api/1.0.0/api/root" />
	</http:request-config>
	<ws:consumer-config name="Delta_Web_Service_Consumer"
		wsdlLocation="http://mu.mulesoft-training.com/essentials/delta?wsdl"
		service="TicketServiceService" port="TicketServicePort"
		serviceAddress="http://training-u.cloudhub.io/essentials/delta"
		doc:name="Web Service Consumer" />
	<configuration defaultExceptionStrategy-ref="Choice_Exception_Strategy"
		doc:name="Configuration">
		<http:config useTransportForUris="false" />
	</configuration>





	<payload-type-filter expectedType="java.util.ArrayList"
		name="Filter_Not_ArrayList" doc:name="Payload" />


	<message-filter name="Filter_And_Log_Not_ArrayList"
		doc:name="Message">
		<filter ref="Filter_Not_ArrayList" />
	</message-filter>


	<expression-filter
		expression="#[message.inboundProperties.'http.uri.params'.api.flights is empty]"
		name="isRestUriValid" doc:name="Expression" />


	<message-property-filter pattern="http.method=GET"
		caseSensitive="false" scope="inbound" name="isMethodAllowed" doc:name="Message Property Filter" />

	<not-filter name="not-favicon-request" doc:name="Not">
		<message-property-filter pattern="http.request.path=/api/favicon.ico"
			caseSensitive="true" scope="inbound" />
	</not-filter>

	<message-filter onUnaccepted="methodNotAllowed"
		doc:name="Filter out invalid request methods" name="methodNotAllowedMessageFilter">
		<message-property-filter pattern="http.method=GET"
			caseSensitive="true" scope="inbound" />
	</message-filter>

	<message-property-filter name="isValidFlightsApiResource" pattern="http.request.path=/api/flights"
		caseSensitive="true" scope="inbound" doc:name="isValidFlightsApiResource" />



	<and-filter name="isMethodAndResourceAllowed" doc:name="And">
		<filter ref="isMethodAllowed" />
        <filter ref="isValidFlightsApiResource"/>
	</and-filter>
	<message-property-filter pattern="'http.uri.params'.flights != empty"
		caseSensitive="true" scope="inbound" name="flightsNotEmpty" doc:name="Message Property" />




	<choice-exception-strategy name="Choice_Exception_Strategy">
		<catch-exception-strategy
			when="#[exception.causedBy(java.lang.IllegalArgumentException)]"
			doc:name="No destination code set">
			<set-payload value="#[exception.message]" doc:name="Set Payload" />
			<set-property propertyName="http.status" value="400"
				doc:name="Property" />
			<logger level="INFO" doc:name="Logger" />
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[exception.causeMatches('com.mulesoft.weave.*')]" doc:name="No flights &#8211; DW exception">
			<set-payload value="NO FLIGHTS to #[flowVars.code +  '\n' + exception]"
				doc:name="Set Payload" />
			<set-property propertyName="http.status" value="400"
				doc:name="Property" />
			<logger level="INFO" doc:name="Logger" />
		</catch-exception-strategy>
		<catch-exception-strategy
			doc:name="Data unavailable &#8211; all other exceptions">
			<set-payload value="DATA IS UNAVAILABLE. TRY LATER. #['\n' + exception] "
				doc:name="Set Payload" />
			<set-property propertyName="http.status" value="500"
				doc:name="Property" />
			<logger level="INFO" doc:name="Logger" />
		</catch-exception-strategy>

	</choice-exception-strategy>
	<flow name="invalidRestResource">
		<set-property propertyName="http.status" value="404"
			doc:name="Set http.status to 404" />
		<set-payload
			value="#['Rest resource URL '+message.inboundProperties.'http.uriProperties'+ ' is not allowed']"
			doc:name="Set payload to invalid Rest resource" />
	</flow>
	<flow name="filterFaviconRequest">
		<logger
			message="A favicon.ico request was silently filtered before reaching the APIkit router"
			level="INFO" category="com.mulesoft.training.flights" doc:name="Logger" />
		<set-property propertyName="http.status" value="404"
			doc:name="Set http.status to 404" />
		<set-payload value="#['favicon.ico request denied']"
			doc:name="Set payload to null" />
	</flow>
	<flow name="methodNotAllowed">
		<set-property propertyName="http.status" value="404"
			doc:name="Set http.status to 404" />
		<set-payload
			value="#['Method '+message.inboundProperties.'http.method'+ ' is not allowed']"
			doc:name="Set payload to methodNotAllowed response" />
	</flow>
    <flow name="invalidRequest">
        <set-property propertyName="http.status" value="404" doc:name="http.status to 404"/>
        <set-payload value="#['Invalid '+message.inboundProperties.'http.method'+ ' request to URI ' +message.inboundProperties.'http.request.path']" doc:name="Set payload to invalid request message"/>
    </flow>

</mule>
